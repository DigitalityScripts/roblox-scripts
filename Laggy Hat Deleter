rs = game:GetService("RunService")

if not game:IsLoaded() then
    game.Loaded:Wait()
end
if not game:GetService("Players").LocalPlayer then
    repeat rs.PreRender:Wait() until game:GetService("Players").LocalPlayer
end
if not game:GetService("Players").LocalPlayer:FindFirstChild("PlayerGui") then
    game:GetService("Players").LocalPlayer:WaitForChild("PlayerGui")
end

function largestaxis(part)
    if part:IsA("BasePart") then
        return math.max(part.Size.X, part.Size.Y, part.Size.Z)
    end
end

function check(hat)
    local han = hat and hat:IsA("Accessory") and hat:FindFirstChild("Handle")
    if not han then
        return
    end
    if largestaxis(han) >= 100 then
        han.Transparency = 1
    end
end

function monitorchar(c)
    for i, v in c:GetChildren() do
        if v:IsA("Accessory") then
            check(v)
        end
    end
    local con = c.ChildAdded:Connect(function(v)
        if v:IsA("Accessory") then
            check(v)
        end
    end)
    coroutine.wrap(function()
        c:GetPropertyChangedSignal("Parent"):Wait()
        if con then
            con:Disconnect()
            con = nil
        end
    end)()
end

function monitorplr(p)
    if not p:IsA("Player") then
        return
    end
    local c = p.Character
    if c then
        monitorchar(c)
    end
    local con = p.CharacterAdded:Connect(function(c)
        monitorchar(c)
    end)
    coroutine.wrap(function()
        p:GetPropertyChangedSignal("Parent"):Wait()
        if con then
            con:Disconnect()
            con = nil
        end
    end)()
end

players = game:GetService("Players")

for i, p in players:GetPlayers() do
    monitorplr(p)
end

players.PlayerAdded:Connect(function(v)
    monitorplr(p)
end)
